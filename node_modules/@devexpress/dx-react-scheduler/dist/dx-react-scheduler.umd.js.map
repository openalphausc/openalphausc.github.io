{"version":3,"file":"dx-react-scheduler.umd.js","sources":["../src/plugins/scheduler-core.tsx","../src/scheduler.tsx","../src/plugins/basic-view.tsx","../src/plugins/day-view.tsx","../src/plugins/week-view.tsx","../src/plugins/month-view.tsx","../src/plugins/toolbar.tsx","../src/plugins/date-navigator.tsx","../src/plugins/view-switcher.tsx","../src/plugins/appointments.tsx","../src/plugins/all-day-panel.tsx","../src/plugins/view-state.tsx","../src/plugins/editing-state.tsx","../src/plugins/appointment-tooltip.tsx","../src/plugins/appointment-form.tsx","../src/plugins/drag-drop-provider.tsx","../src/plugins/today-button.tsx","../src/plugins/edit-recurrence-menu.tsx","../src/plugins/integrated-editing.tsx","../src/plugins/resources.tsx","../src/plugins/confirmation-dialog.tsx","../src/plugins/current-time-indicator.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { appointments, formatDateTimeGetter } from '@devexpress/dx-scheduler-core';\nimport { SchedulerProps } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass SchedulerCoreBase extends React.PureComponent<SchedulerProps> {\n  formatDateTimeGetter = memoize(locale => formatDateTimeGetter(locale));\n\n  render() {\n    const {\n      data,\n      rootComponent: Root,\n      locale,\n      height,\n      firstDayOfWeek,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"SchedulerCore\"\n      >\n        <Getter name=\"appointments\" value={appointments(data)} />\n        <Getter name=\"formatDate\" value={formatDateTimeGetter(locale)} />\n        <Getter name=\"firstDayOfWeek\" value={firstDayOfWeek} />\n        <Getter name=\"locale\" value={locale} />\n        <Template name=\"root\">\n          <Root height={height}>\n            <TemplatePlaceholder name=\"schedulerRoot\" />\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Scheduler's functionality\n * (data visualization and processing) is implemented in several plugins\n * specified as child components.\n * */\nexport const SchedulerCore: React.ComponentType<SchedulerProps> = SchedulerCoreBase;\n","import * as React from 'react';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { SchedulerCore } from './plugins/scheduler-core';\nimport { SchedulerProps } from './types';\n\nconst SchedulerBase: React.SFC<SchedulerProps> = ({\n  data,\n  rootComponent,\n  children,\n  locale,\n  height,\n  firstDayOfWeek,\n}) => (\n  <PluginHost>\n    <SchedulerCore\n      data={data}\n      rootComponent={rootComponent}\n      locale={locale}\n      height={height}\n      firstDayOfWeek={firstDayOfWeek}\n    />\n    {children}\n  </PluginHost>\n);\n\nSchedulerBase.defaultProps = {\n  data: [],\n  locale: 'en-US',\n  height: 'auto',\n  firstDayOfWeek: 0,\n};\n\n// tslint:disable: max-line-length\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Schedulerâ€™s functionality\n * (data visualization and processing) is implemented in several plugins specified as child components.\n * */\nexport const Scheduler: React.ComponentType<SchedulerProps> = SchedulerBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplateConnector,\n  TemplatePlaceholder,\n  ComputedFn,\n} from '@devexpress/dx-react-core';\nimport {\n  computed,\n  getAppointmentStyle,\n  startViewDate as startViewDateCore,\n  endViewDate as endViewDateCore,\n  availableViews as availableViewsCore,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\nimport { BasicViewProps, BasicViewState, ScrollingStrategy, ElementRect } from '../types';\n\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"cell\" params={params} />;\nconst AppointmentPlaceholder = params => <TemplatePlaceholder name=\"appointment\" params={params} />;\n\nconst startViewDateBaseComputed = ({ viewCellsData }) => startViewDateCore(viewCellsData);\nconst endViewDateBaseComputed = ({ viewCellsData }) => endViewDateCore(viewCellsData);\n\nconst TimeTablePlaceholder = () => <TemplatePlaceholder name=\"timeTable\" />;\nconst DayScalePlaceholder = () => <TemplatePlaceholder name=\"dayScale\" />;\n\nclass BasicViewBase extends React.PureComponent<BasicViewProps, BasicViewState> {\n  state = {\n    rects: [],\n    timeTableElementsMeta: {},\n    scrollingStrategy: {\n      topBoundary: 0,\n      bottomBoundary: 0,\n      changeVerticalScroll: () => undefined,\n    },\n  };\n\n  scrollingStrategyComputed = memoize((viewName, scrollingStrategy) => getters =>\n    computed(getters, viewName!, () => scrollingStrategy, getters.scrollingStrategy));\n\n  timeTableElementsMetaComputed = memoize((viewName, timeTableElementsMeta) => getters =>\n    computed(getters, viewName!, () => timeTableElementsMeta, getters.timeTableElementsMeta));\n\n  intervalCountComputed = memoize((viewName, intervalCount) => getters =>\n    computed(getters, viewName!, () => intervalCount, getters.intervalCount));\n\n  excludedDaysComputed = memoize((viewName, excludedDays) => getters => computed(\n    getters, viewName!, () => excludedDays, getters.excludedDays,\n  ));\n\n  availableViewsComputed = memoize((viewName, viewDisplayName) => ({ availableViews }) =>\n    availableViewsCore(availableViews, viewName!, viewDisplayName));\n\n  currentViewComputed = memoize((viewName, viewDisplayName, type) => ({ currentView }) => (\n    currentView && currentView.name !== viewName\n      ? currentView\n      : { name: viewName, type, displayName: viewDisplayName }\n  ));\n\n  endViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, endViewDateBaseComputed, getters.endViewDate,\n    );\n  }\n\n  startViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, startViewDateBaseComputed, getters.startViewDate,\n    );\n  }\n\n  viewCellsDataComputed = memoize((\n    viewName, cellDuration, startDayHour, endDayHour, viewCellsDataBaseComputed,\n  ) => getters => computed(\n    getters,\n    viewName,\n    viewCellsDataBaseComputed(cellDuration, startDayHour, endDayHour),\n    getters.viewCellsData,\n  ));\n\n  updateRects = memoize((\n    appointments, startViewDate, endViewDate,\n    viewCellsData, cellDuration, excludedDays, timeTableRects,\n  ) => (cellElementsMeta) => {\n    const rects = timeTableRects(\n      appointments, startViewDate, endViewDate, excludedDays,\n      viewCellsData, cellDuration, cellElementsMeta,\n    );\n\n    this.setState({ rects, timeTableElementsMeta: cellElementsMeta });\n  });\n\n  setScrollingStrategy = (scrollingStrategy: ScrollingStrategy) => {\n    this.setState({ scrollingStrategy });\n  }\n\n  render() {\n    const {\n      name: viewName,\n      intervalCount,\n      displayName,\n      type,\n      excludedDays,\n      cellDuration,\n      startDayHour,\n      endDayHour,\n      viewCellsDataComputed,\n      timeTableRects,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      dayScaleLayoutComponent: DayScale,\n      timeTableCellComponent: TimeTableCell,\n      timeTableLayoutComponent: TimeTableLayout,\n      timeTableRowComponent,\n      appointmentLayerComponent: AppointmentLayer,\n      layoutProps,\n      layoutComponent: Layout,\n    } = this.props;\n    const { rects, timeTableElementsMeta, scrollingStrategy } = this.state;\n    const viewDisplayName = displayName || viewName;\n\n    return (\n      <Plugin name=\"basicView\">\n        <Getter\n          name=\"availableViews\"\n          computed={this.availableViewsComputed(viewName, viewDisplayName)}\n        />\n        <Getter\n          name=\"currentView\"\n          computed={this.currentViewComputed(viewName, viewDisplayName, type)}\n        />\n        <Getter\n          name=\"intervalCount\"\n          computed={this.intervalCountComputed(viewName, intervalCount)}\n        />\n        <Getter name=\"excludedDays\" computed={this.excludedDaysComputed(viewName, excludedDays)} />\n        <Getter\n          name=\"viewCellsData\"\n          computed={this.viewCellsDataComputed(\n            viewName, cellDuration, startDayHour, endDayHour, viewCellsDataComputed,\n          )}\n        />\n        <Getter name=\"startViewDate\" computed={this.startViewDateComputed} />\n        <Getter name=\"endViewDate\" computed={this.endViewDateComputed} />\n\n        <Getter\n          name=\"timeTableElementsMeta\"\n          computed={this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)}\n        />\n        <Getter\n          name=\"scrollingStrategy\"\n          computed={this.scrollingStrategyComputed(viewName, scrollingStrategy)}\n        />\n\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <Layout\n                  dayScaleComponent={DayScalePlaceholder}\n                  timeTableComponent={TimeTablePlaceholder}\n                  setScrollingStrategy={this.setScrollingStrategy}\n                  {...layoutProps}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <DayScale\n                  cellComponent={dayScaleCellComponent}\n                  rowComponent={dayScaleRowComponent}\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"cell\">\n          {params => (\n            <TemplateConnector>\n              {({ currentView }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder params={params} />;\n                return (\n                  <TimeTableCell {...params} />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"timeTable\">\n          <TemplateConnector>\n            {({\n              formatDate,\n              currentView,\n              viewCellsData,\n              appointments, startViewDate, endViewDate,\n              excludedDays: excludedDaysGetter,\n            }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              const setRects = this.updateRects(\n                appointments, startViewDate, endViewDate,\n                viewCellsData, cellDuration, excludedDaysGetter,\n                timeTableRects,\n              );\n\n              return (\n                <>\n                  <TimeTableLayout\n                    cellsData={viewCellsData}\n                    rowComponent={timeTableRowComponent}\n                    cellComponent={CellPlaceholder}\n                    formatDate={formatDate}\n                    setCellElementsMeta={setRects}\n                  />\n                  <AppointmentLayer>\n                    {(rects as ElementRect[]).map(({\n                      dataItem, type: rectType, fromPrev, toNext,\n                      durationType, ...geometry\n                    }, index) => (\n                      <AppointmentPlaceholder\n                        key={index.toString()}\n                        type={rectType}\n                        data={dataItem}\n                        fromPrev={fromPrev}\n                        toNext={toNext}\n                        durationType={durationType}\n                        style={getAppointmentStyle(geometry)}\n                      />\n                    ))}\n                  </AppointmentLayer>\n                </>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\nexport const BasicView: React.ComponentType<BasicViewProps> = BasicViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  viewCellsData as viewCellsDataCore, verticalTimeTableRects } from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { VerticalViewProps } from '../types';\n\nconst TYPE = 'day';\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ currentDate, intervalCount }) => {\n  return viewCellsDataCore(\n    currentDate, undefined,\n    intervalCount, [],\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\nconst DayScaleEmptyCellPlaceholder = () => <TemplatePlaceholder name=\"dayScaleEmptyCell\" />;\nconst TimeScalePlaceholder = () => <TemplatePlaceholder name=\"timeScale\" />;\n\nclass DayViewBase extends React.PureComponent<VerticalViewProps> {\n  static defaultProps: Partial<VerticalViewProps> = {\n    name: 'Day',\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainer: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      timeScaleLayoutComponent: TimeScale,\n      timeScaleLabelComponent: TimeScaleLabel,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      appointmentLayerComponent,\n      cellDuration,\n      name: viewName,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"DayView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={TYPE}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          timeTableRects={verticalTimeTableRects}\n          layoutComponent={layoutComponent}\n          layoutProps={{\n            dayScaleEmptyCellComponent: DayScaleEmptyCellPlaceholder,\n            timeScaleComponent: TimeScalePlaceholder,\n          }}\n        />\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <DayScaleEmptyCell />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <TimeScale\n                  labelComponent={TimeScaleLabel}\n                  tickCellComponent={timeScaleTickCellComponent}\n                  rowComponent={timeScaleTicksRowComponent}\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/*** A plugin that renders Scheduler data for a day. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const DayView: React.ComponentType<VerticalViewProps> = DayViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  viewCellsData as viewCellsDataCore, verticalTimeTableRects } from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { WeekViewProps } from '../types';\n\nconst DAYS_IN_WEEK = 7;\nconst TYPE = 'week';\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ firstDayOfWeek, intervalCount, excludedDays, currentDate }) => {\n  return viewCellsDataCore(\n    currentDate, firstDayOfWeek,\n    intervalCount! * DAYS_IN_WEEK, excludedDays!,\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\nconst DayScaleEmptyCellPlaceholder = () => <TemplatePlaceholder name=\"dayScaleEmptyCell\" />;\nconst TimeScalePlaceholder = () => <TemplatePlaceholder name=\"timeScale\" />;\n\nclass WeekViewBase extends React.PureComponent<WeekViewProps> {\n  static defaultProps: Partial<WeekViewProps> = {\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n    excludedDays: [],\n    name: 'Week',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      timeScaleLayoutComponent: TimeScale,\n      timeScaleLabelComponent: TimeScaleLabel,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      cellDuration,\n      excludedDays,\n      name: viewName,\n      appointmentLayerComponent,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"WeekView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={TYPE}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          excludedDays={excludedDays}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          timeTableRects={verticalTimeTableRects}\n          layoutComponent={layoutComponent}\n          layoutProps={{\n            timeScaleComponent: TimeScalePlaceholder,\n            dayScaleEmptyCellComponent: DayScaleEmptyCellPlaceholder,\n          }}\n        />\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <DayScaleEmptyCell />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              return (\n                <TimeScale\n                  labelComponent={TimeScaleLabel}\n                  tickCellComponent={timeScaleTickCellComponent}\n                  rowComponent={timeScaleTicksRowComponent}\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders the Scheduler's week view. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const WeekView: React.ComponentType<WeekViewProps> = WeekViewBase;\n","import * as React from 'react';\nimport { Plugin, PluginComponents } from '@devexpress/dx-react-core';\nimport { monthCellsData, horizontalTimeTableRects } from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { MonthViewProps } from '../types';\n\nconst timeTableRects = (\n  appointments, startViewDate, endViewDate, excludedDays,\n  viewCellsData, cellDuration, cellElementsMeta,\n) => horizontalTimeTableRects(\n  appointments, startViewDate, endViewDate,\n  viewCellsData, cellElementsMeta,\n);\n\nconst TYPE = 'month';\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ currentDate, firstDayOfWeek, intervalCount }) => {\n  return monthCellsData(\n    currentDate, firstDayOfWeek,\n    intervalCount!, Date.now(),\n  );\n};\n\nclass MonthViewBase extends React.PureComponent<MonthViewProps> {\n  static defaultProps: Partial<MonthViewProps> = {\n    intervalCount: 1,\n    name: 'Month',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      appointmentLayerComponent,\n      name: viewName,\n      intervalCount,\n      displayName,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"MonthView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={TYPE}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          timeTableRects={timeTableRects}\n          layoutComponent={layoutComponent}\n        />\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders Scheduler data for a month. This plugin arranges appointments from left to right.\n * An appointment's size depends on its duration in days.\n * However, it occupies the entire day cell if an appointment lasts only for several hours or minutes.\n * The time scale and all-day panel are not available in this view.\n * */\nexport const MonthView: React.ComponentType<MonthViewProps> = MonthViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ToolbarProps } from '../types';\n\nclass ToolbarBase extends React.PureComponent<ToolbarProps> {\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    flexibleSpaceComponent: 'FlexibleSpace',\n  };\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's toolbar. */\nexport const Toolbar: React.ComponentType<ToolbarProps> = ToolbarBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  monthCellsData,\n  viewBoundText,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\n\nimport { DateNavigatorProps, DateNavigatorState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst navigate = (action, currentView, intervalCount) => (direction, nextDate) => action({\n  direction,\n  nextDate,\n  amount: intervalCount,\n  step: currentView.type,\n});\n\nclass DateNavigatorBase extends React.PureComponent<DateNavigatorProps, DateNavigatorState> {\n  target!: React.ReactInstance;\n\n  state = {\n    visible: false,\n  };\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    overlayComponent: 'Overlay',\n    openButtonComponent: 'OpenButton',\n    navigationButtonComponent: 'NavigationButton',\n    calendarComponent: 'Calendar',\n    calendarRowComponent: 'CalendarRow',\n    calendarCellComponent: 'CalendarCell',\n    calendarHeaderRowComponent: 'CalendarHeaderRow',\n    calendarHeaderCellComponent: 'CalendarHeaderCell',\n    calendarTextComponent: 'CalendarText',\n    calendarNavigatorComponent: 'CalendarNavigator',\n    calendarNavigationButtonComponent: 'CalendarNavigationButton',\n  };\n\n  setRootRef = (target: React.ReactInstance) => {\n    this.target = target;\n  }\n\n  handleVisibilityToggle = () => {\n    this.setState(prevState => ({ visible: !prevState.visible }));\n  }\n\n  handleHide = () => {\n    this.setState({ visible: false });\n  }\n\n  navigateAction = memoize((changeCurrentDate, currentView, intervalCount, navigateAction) =>\n    navigateAction(changeCurrentDate, currentView, intervalCount));\n\n  render() {\n    const {\n      rootComponent: Root,\n      overlayComponent: Overlay,\n      openButtonComponent: OpenButton,\n      navigationButtonComponent: NavigationButton,\n      calendarComponent: Calendar,\n      calendarRowComponent: CalendarRow,\n      calendarCellComponent: CalendarCell,\n      calendarHeaderRowComponent: CalendarHeaderRow,\n      calendarHeaderCellComponent: CalendarHeaderCell,\n      calendarTextComponent: CalendarText,\n      calendarNavigationButtonComponent: CalendarNavigationButton,\n      calendarNavigatorComponent: CalendarNavigator,\n    } = this.props;\n\n    const { visible } = this.state;\n    return (\n      <Plugin\n        name=\"DateNavigator\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              currentDate,\n              startViewDate,\n              endViewDate,\n              firstDayOfWeek,\n              currentView,\n              intervalCount,\n              formatDate,\n            }, {\n              changeCurrentDate,\n            }) => {\n              const navigateAction = this.navigateAction(\n                changeCurrentDate, currentView, intervalCount, navigate,\n              );\n              const calendarDateChanged = (nextDate) => {\n                navigateAction(undefined, nextDate);\n                this.handleHide();\n              };\n              const navigatorText = viewBoundText(\n                startViewDate,\n                endViewDate,\n                currentView.type,\n                currentDate,\n                intervalCount,\n                formatDate,\n              );\n              return (\n                <>\n                  <Root\n                    navigationButtonComponent={NavigationButton}\n                    openButtonComponent={OpenButton}\n                    navigatorText={navigatorText}\n                    rootRef={this.setRootRef}\n                    onVisibilityToggle={this.handleVisibilityToggle}\n                    onNavigate={navigateAction}\n                  />\n                  <Overlay\n                    visible={visible}\n                    target={this.target}\n                    onHide={this.handleHide}\n                  >\n                    <Calendar\n                      selectedDate={currentDate}\n                      firstDayOfWeek={firstDayOfWeek}\n                      getCells={monthCellsData}\n                      textComponent={CalendarText}\n                      navigationButtonComponent={CalendarNavigationButton}\n                      rowComponent={CalendarRow}\n                      cellComponent={CalendarCell}\n                      headerRowComponent={CalendarHeaderRow}\n                      headerCellComponent={CalendarHeaderCell}\n                      navigatorComponent={CalendarNavigator}\n                      onSelectedDateChange={calendarDateChanged}\n                      formatDate={formatDate}\n                    />\n                  </Overlay>\n                </>\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Schedulerâ€™s date navigator. */\nexport const DateNavigator: React.ComponentType<DateNavigatorProps> = DateNavigatorBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ViewSwitcherProps } from '../types/view-switcher';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nclass ViewSwitcherBase extends React.PureComponent<ViewSwitcherProps> {\n  static components: PluginComponents = {\n    switcherComponent: 'Switcher',\n  };\n\n  render() {\n    const { switcherComponent: Switcher } = this.props;\n\n    return (\n      <Plugin\n        name=\"ViewSwitcher\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView,\n              availableViews,\n            }, {\n              setCurrentViewName,\n            }) => (\n              <Switcher\n                currentView={currentView}\n                availableViews={availableViews}\n                onChange={setCurrentViewName}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's view switcher. */\nexport const ViewSwitcher: React.ComponentType<ViewSwitcherProps> = ViewSwitcherBase;\n","import * as React from 'react';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { createClickHandlers } from '@devexpress/dx-core';\nimport { POSITION_START, POSITION_END } from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentsProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n];\n\nclass AppointmentsBase extends React.PureComponent<AppointmentsProps> {\n  static components: PluginComponents = {\n    splitIndicatorComponent: 'SplitIndicator',\n    containerComponent: 'Container',\n    appointmentComponent: 'Appointment',\n    appointmentContentComponent: 'AppointmentContent',\n    recurringIconComponent: 'RecurringIcon',\n  };\n\n  render() {\n    const {\n      splitIndicatorComponent: SplitIndicator,\n      appointmentComponent: Appointment,\n      appointmentContentComponent: AppointmentContent,\n      containerComponent: Container,\n      recurringIconComponent,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"Appointments\"\n        dependencies={pluginDependencies}\n      >\n        <Template\n          name=\"appointment\"\n        >\n          {({ style, ...params }: any) => (\n            <TemplateConnector>\n              {({ formatDate }) => (\n                <Container style={style}>\n                  <TemplatePlaceholder\n                    name=\"appointmentTop\"\n                    params={{ data: params.data, type: params.type, slice: params.fromPrev }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentContent\"\n                    params={{ ...params, formatDate }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentBottom\"\n                    params={{ data: params.data, type: params.type, slice: params.toNext }}\n                  />\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointmentContent\">\n          {({\n            onClick, onDoubleClick, formatDate,\n            data, type, fromPrev, toNext,\n            durationType, resources,\n            ...restParams\n          }: any) => (\n            <Appointment\n              data={data}\n              resources={resources}\n              {...createClickHandlers(onClick, onDoubleClick)}\n              {...restParams}\n            >\n              {fromPrev && <SplitIndicator position={POSITION_START} appointmentType={type} />}\n              <AppointmentContent\n                data={data}\n                type={type}\n                durationType={durationType}\n                recurringIconComponent={recurringIconComponent}\n                formatDate={formatDate}\n                resources={resources}\n              />\n              {toNext && <SplitIndicator position={POSITION_END} appointmentType={type} />}\n            </Appointment>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders appointments. */\nexport const Appointments: React.ComponentType<AppointmentsProps> = AppointmentsBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  allDayCells,\n  getAppointmentStyle,\n  allDayRects,\n} from '@devexpress/dx-scheduler-core';\nimport moment from 'moment';\n\nimport { AllDayPanelProps, AllDayPanelState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n];\nconst defaultMessages = {\n  allDay: 'All Day',\n};\nconst MONTH = 'Month';\nconst AppointmentPlaceholder = params => <TemplatePlaceholder name=\"appointment\" params={params} />;\nconst AllDayPanelPlaceholder = params => <TemplatePlaceholder name=\"allDayPanel\" params={params} />;\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"allDayPanelCell\" params={params} />;\n\nclass AllDayPanelBase extends React.PureComponent<AllDayPanelProps, AllDayPanelState> {\n  state: AllDayPanelState = {\n    rects: [],\n    elementsMeta: {},\n  };\n  static defaultProps: Partial<AllDayPanelProps> = {\n    messages: {},\n  };\n  static components: PluginComponents = {\n    appointmentLayerComponent: 'AppointmentLayer',\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    cellComponent: 'Cell',\n    rowComponent: 'Row',\n    titleCellComponent: 'TitleCell',\n    containerComponent: 'Container',\n  };\n\n  allDayCellsData = memoize(viewCellsData => allDayCells(viewCellsData));\n\n  updateRects = memoize((\n    appointments, startViewDate, excludedDays, endViewDate, viewCellsData,\n  ) => (cellElementsMeta) => {\n    const allDayLeftBound = moment(startViewDate).hours(0).minutes(0).toDate();\n    const allDayRightBound = moment(endViewDate).hours(23).minutes(59).toDate();\n    const rects = allDayRects(\n      appointments, allDayLeftBound, allDayRightBound,\n      excludedDays, viewCellsData, cellElementsMeta,\n    );\n\n    this.setState({ rects, elementsMeta: cellElementsMeta });\n  });\n\n  getMessageFormatter = memoize((messages, allDayPanelDefaultMessages) =>\n    getMessagesFormatter({ ...allDayPanelDefaultMessages, ...messages }));\n\n  render() {\n    const {\n      appointmentLayerComponent: AppointmentLayer,\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent,\n      titleCellComponent: TitleCell,\n      containerComponent: Container,\n      messages,\n    } = this.props;\n    const { rects, elementsMeta } = this.state;\n    const getMessage = this.getMessageFormatter(messages, defaultMessages);\n\n    return (\n      <Plugin\n        name=\"AllDayPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"allDayElementsMeta\" value={elementsMeta} />\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView === MONTH) return null;\n              return (\n                <TitleCell getMessage={getMessage} />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView === MONTH) return null;\n              return (\n                <Container>\n                  <AllDayPanelPlaceholder />\n                </Container>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView, appointments, startViewDate, formatDate,\n              endViewDate, excludedDays, viewCellsData,\n            }) => {\n              if (currentView.name === MONTH) return null;\n              const setRects = this.updateRects(\n                appointments, startViewDate, excludedDays, endViewDate, viewCellsData,\n              );\n              return (\n                <>\n                  <Layout\n                    cellComponent={CellPlaceholder}\n                    rowComponent={rowComponent}\n                    cellsData={this.allDayCellsData(viewCellsData)}\n                    setCellElementsMeta={setRects}\n                    formatDate={formatDate}\n                  />\n                  <AppointmentLayer>\n                    {rects.map(({\n                      dataItem, type, fromPrev, toNext, ...geometry\n                    }, index) => (\n                      <AppointmentPlaceholder\n                        style={getAppointmentStyle(geometry)}\n                        type={type}\n                        key={index.toString()}\n                        data={dataItem}\n                        fromPrev={fromPrev}\n                        toNext={toNext}\n                      />\n                    ))}\n                  </AppointmentLayer>\n                </>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => <Cell {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the All Day Panel. */\nexport const AllDayPanel: React.ComponentType<AllDayPanelProps> = AllDayPanelBase;\n","import * as React from 'react';\nimport {\n  Getter,\n  Action,\n  Plugin,\n  createStateHelper,\n  StateHelper,\n  ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  changeCurrentDate,\n  setCurrentViewName,\n  ChangeCurrentDatePayload,\n} from '@devexpress/dx-scheduler-core';\nimport { ViewStateProps, ViewStateState } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass ViewStateBase extends React.PureComponent<ViewStateProps, ViewStateState> {\n  changeCurrentDate: ActionFn<ChangeCurrentDatePayload>;\n  setCurrentViewName: ActionFn<string>;\n\n  static defaultProps: Partial<ViewStateProps> = {\n    defaultCurrentDate: new Date(),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentDate: props.currentDate || props.defaultCurrentDate,\n      currentViewName: props.currentViewName || props.defaultCurrentViewName,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        currentDate: () => {\n          const { onCurrentDateChange } = this.props;\n          return onCurrentDateChange;\n        },\n        currentViewName: () => {\n          const { onCurrentViewNameChange } = this.props;\n          return onCurrentViewNameChange;\n        },\n      },\n    );\n\n    this.changeCurrentDate = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentDate', changeCurrentDate);\n    this.setCurrentViewName = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentViewName', setCurrentViewName);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentDate = prevState.currentDate,\n      currentViewName = prevState.currentViewName,\n    } = nextProps;\n\n    return {\n      currentDate,\n      currentViewName,\n    };\n  }\n\n  getCurrentViewComputed =  memoize(currentViewName => () => (\n    currentViewName\n    ? { name: currentViewName }\n    : undefined\n  ));\n\n  render() {\n    const { currentDate, currentViewName: stateCurrentViewName } = this.state;\n    return (\n      <Plugin\n        name=\"ViewState\"\n      >\n        <Getter name=\"currentDate\" value={currentDate} />\n        <Getter name=\"currentView\" computed={this.getCurrentViewComputed(stateCurrentViewName)} />\n        <Action name=\"changeCurrentDate\" action={this.changeCurrentDate} />\n        <Action name=\"setCurrentViewName\" action={this.setCurrentViewName} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the view state. It specifies the current date and the displayed view. */\nexport const ViewState: React.ComponentType<ViewStateProps> = ViewStateBase;\n","import * as React from 'react';\nimport {\n  Action, Plugin, Getter, createStateHelper, StateHelper, ComputedFn, ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  addAppointment,\n  cancelAddedAppointment,\n  startEditAppointment,\n  stopEditAppointment,\n  changeAppointment,\n  cancelChanges,\n  changedAppointmentById,\n  RECURRENCE_EDIT_SCOPE,\n  preCommitChanges as preCommitChangesBase,\n} from '@devexpress/dx-scheduler-core';\nimport { EditingStateProps, EditingStateState } from '../types';\n\nclass EditingStateBase extends React.PureComponent<EditingStateProps, EditingStateState> {\n  startEditAppointment: ComputedFn;\n  stopEditAppointment: (payload?: any) => void;\n  changeAppointment: ComputedFn;\n  cancelChangedAppointment: (payload?: any) => void;\n  commitChangedAppointment: ActionFn<any>;\n  addAppointment: ComputedFn;\n  changeAddedAppointment: ComputedFn;\n  cancelAddedAppointment: (payload?: any) => void;\n  commitAddedAppointment: ComputedFn;\n  commitDeletedAppointment: ActionFn<any>;\n\n  static defaultProps: Partial<EditingStateProps> = {\n    defaultEditingAppointment: undefined,\n    defaultAppointmentChanges: {},\n    defaultAddedAppointment: {},\n    preCommitChanges: preCommitChangesBase,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingAppointment: props.editingAppointment || props.defaultEditingAppointment,\n      addedAppointment: props.addedAppointment || props.defaultAddedAppointment,\n      appointmentChanges: props.appointmentChanges || props.defaultAppointmentChanges,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        editingAppointment: () => {\n          const { onEditingAppointmentChange } = this.props;\n          return onEditingAppointmentChange;\n        },\n        addedAppointment: () => {\n          const { onAddedAppointmentChange } = this.props;\n          return onAddedAppointmentChange;\n        },\n        appointmentChanges: () => {\n          const { onAppointmentChangesChange } = this.props;\n          return onAppointmentChangesChange;\n        },\n      },\n    );\n\n    this.startEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', startEditAppointment);\n    this.stopEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', stopEditAppointment);\n\n    this.changeAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', changeAppointment);\n    this.cancelChangedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', cancelChanges);\n\n    this.commitChangedAppointment = (type = RECURRENCE_EDIT_SCOPE.CURRENT) => {\n      const { appointmentChanges, editingAppointment } = this.state;\n      const { onCommitChanges, preCommitChanges  } = this.props;\n\n      if (!editingAppointment) return;\n      const changes =  !editingAppointment.rRule\n        ? { changed: changedAppointmentById(appointmentChanges, editingAppointment.id!) }\n        : preCommitChanges!(appointmentChanges, editingAppointment, type);\n\n      onCommitChanges(changes);\n      this.cancelChangedAppointment();\n      this.stopEditAppointment();\n    };\n\n    this.addAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', addAppointment);\n    this.changeAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', changeAppointment);\n    this.cancelAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', cancelAddedAppointment);\n    this.commitAddedAppointment = () => {\n      const { onCommitChanges } = this.props;\n      const { addedAppointment: stateAddedAppointment } = this.state;\n      onCommitChanges({\n        added: stateAddedAppointment,\n      });\n    };\n\n    this.commitDeletedAppointment = ({ deletedAppointmentData, type = 'current' }) => {\n      const { onCommitChanges, preCommitChanges } = this.props;\n\n      const changes = deletedAppointmentData.rRule\n        ? preCommitChanges!(null, deletedAppointmentData, type)\n        : { deleted: deletedAppointmentData.id };\n      onCommitChanges(changes);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      editingAppointment = prevState.editingAppointment,\n      appointmentChanges = prevState.appointmentChanges,\n      addedAppointment = prevState.addedAppointment,\n    } = nextProps;\n\n    return {\n      editingAppointment,\n      appointmentChanges,\n      addedAppointment,\n    };\n  }\n\n  render() {\n    const { addedAppointment, editingAppointment, appointmentChanges } = this.state;\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter name=\"editingAppointment\" value={editingAppointment} />\n        <Action name=\"startEditAppointment\" action={this.startEditAppointment} />\n        <Action name=\"stopEditAppointment\" action={this.stopEditAppointment} />\n\n        <Getter name=\"appointmentChanges\" value={appointmentChanges} />\n        <Action name=\"changeAppointment\" action={this.changeAppointment} />\n        <Action name=\"cancelChangedAppointment\" action={this.cancelChangedAppointment} />\n        <Action name=\"commitChangedAppointment\" action={this.commitChangedAppointment} />\n\n        <Getter name=\"addedAppointment\" value={addedAppointment} />\n        <Action name=\"addAppointment\" action={this.addAppointment} />\n        <Action name=\"changeAddedAppointment\" action={this.changeAddedAppointment} />\n        <Action name=\"cancelAddedAppointment\" action={this.cancelAddedAppointment} />\n        <Action name=\"commitAddedAppointment\" action={this.commitAddedAppointment} />\n\n        <Action name=\"commitDeletedAppointment\" action={this.commitDeletedAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the scheduler appointment editing state. */\nexport const EditingState: React.ComponentType<EditingStateProps> = EditingStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  createStateHelper,\n  StateHelper,\n  PluginComponents,\n  Action,\n} from '@devexpress/dx-react-core';\nimport {\n  OPEN_COMMAND_BUTTON,\n  CLOSE_COMMAND_BUTTON,\n  DELETE_COMMAND_BUTTON,\n  setAppointmentMeta,\n  AppointmentMeta,\n  TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n  getAppointmentResources,\n} from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentTooltipProps, AppointmentTooltipState, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n  { name: 'EditingState', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst commandButtonIds = {\n  open: OPEN_COMMAND_BUTTON,\n  close: CLOSE_COMMAND_BUTTON,\n  delete: DELETE_COMMAND_BUTTON,\n};\n\nclass AppointmentTooltipBase extends React.PureComponent<\n  AppointmentTooltipProps, AppointmentTooltipState\n> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentMeta: (appointmentMeta: AppointmentMeta) => void;\n  onAppointmentClick: (appointmentMeta: AppointmentMeta) => void;\n\n  static defaultProps: Partial<AppointmentTooltipProps> = {\n    showOpenButton: false,\n    showDeleteButton: false,\n    showCloseButton: false,\n  };\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    headerComponent: 'Header',\n    contentComponent: 'Content',\n    commandButtonComponent: 'CommandButton',\n    recurringIconComponent: 'RecurringIcon',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentMeta: props.appointmentMeta,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentMeta: () => {\n          const { onAppointmentMetaChange } = this.props;\n          return onAppointmentMetaChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentMeta = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentMeta', setAppointmentMeta);\n    this.onAppointmentClick = ({ target, data }) => {\n      this.setAppointmentMeta({ target, data });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentMeta = prevState.appointmentMeta,\n    } = nextProps;\n    return {\n      appointmentMeta,\n      visible,\n    };\n  }\n\n  render() {\n    const {\n      showOpenButton,\n      showDeleteButton,\n      showCloseButton,\n      layoutComponent: Layout,\n      headerComponent,\n      contentComponent,\n      commandButtonComponent,\n      recurringIconComponent,\n    } = this.props;\n    const { visible, appointmentMeta } = this.state;\n\n    return (\n      <Plugin\n        name=\"AppointmentTooltip\"\n        dependencies={pluginDependencies}\n      >\n        <Action name={TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY} action={this.toggleVisibility} />\n\n        <Template name=\"timeTable\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              formatDate, resources, plainResources,\n            }, {\n              finishDeleteAppointment, openDeleteConfirmationDialog,\n            }) => {\n              const onDeleteButtonClick = () => {\n                if (openDeleteConfirmationDialog) {\n                  openDeleteConfirmationDialog({\n                    hideActionName: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n                    appointmentData: appointmentMeta.data,\n                  });\n                } else {\n                  this.toggleVisibility();\n                  finishDeleteAppointment(appointmentMeta.data);\n                }\n              };\n              return (\n                <TemplatePlaceholder\n                  name=\"tooltip\"\n                  params={{\n                    commandButtonComponent,\n                    recurringIconComponent,\n                    showOpenButton,\n                    showDeleteButton,\n                    showCloseButton,\n                    headerComponent,\n                    contentComponent,\n                    appointmentMeta,\n                    appointmentResources: appointmentMeta ? getAppointmentResources(\n                      appointmentMeta.data as any, resources, plainResources,\n                    ) : [],\n                    visible,\n                    onHide: this.toggleVisibility,\n                    commandButtonIds,\n                    ...finishDeleteAppointment && {\n                      onDeleteButtonClick,\n                    },\n                    formatDate,\n                  }}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: any) => <Layout {...params} />}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplatePlaceholder\n              params={{\n                ...params,\n                onClick: ({ target, data }) =>\n                 this.onAppointmentClick({ target, data }),\n              }}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/** The AppointmentTooltip plugin allows you to display information about an appointment in a tooltip. */\nexport const AppointmentTooltip: React.ComponentType<AppointmentTooltipProps> = AppointmentTooltipBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  createStateHelper,\n  StateHelper,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n  Action,\n} from '@devexpress/dx-react-core';\nimport {\n  setAppointmentData,\n  isAllDayCell,\n  callActionIfExists,\n  AppointmentModel,\n  TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n  getAppointmentResources,\n  ValidResourceInstance,\n} from '@devexpress/dx-scheduler-core';\n\nimport {\n  AppointmentFormProps, AppointmentFormState, AppointmentTooltip, Appointments,\n} from '../types';\n\nconst addDoubleClickToCell = (\n  title, startDate, endDate, allDay, openFormHandler, addAppointment, params,\n) => {\n  const newAppointmentData = { title, startDate, endDate, allDay };\n  return (\n    <TemplatePlaceholder\n      params={{\n        ...params,\n        onDoubleClick: () => {\n          openFormHandler(newAppointmentData);\n          callActionIfExists(addAppointment,\n            { appointmentData: newAppointmentData });\n        },\n      }}\n    />\n  );\n};\n\nconst defaultMessages = {\n  allDayLabel: 'All Day',\n  titleLabel: 'Title',\n  commitCommand: 'Save',\n  cancelCommand: 'Cancel',\n  detailsLabel: 'Details',\n  moreInformationLabel: 'More Information',\n  repeatLabel: 'Repeat',\n  notesLabel: 'Notes',\n  never: 'Never',\n  daily: 'Daily',\n  weekly: 'Weekly',\n  monthly: 'Monthly',\n  yearly: 'Yearly',\n  repeatEveryLabel: 'Repeat every',\n  daysLabel: 'day(s)',\n  endRepeatLabel: 'End repeat',\n  onLabel: 'On',\n  afterLabel: 'After',\n  occurrencesLabel: 'occurrence(s)',\n  weeksOnLabel: 'week(s) on:',\n  monthsLabel: 'month(s)',\n  ofEveryMonthLabel: 'of every month',\n  theLabel: 'The',\n  firstLabel: 'First',\n  secondLabel: 'Second',\n  thirdLabel: 'Third',\n  fourthLabel: 'Fourth',\n  lastLabel: 'Last',\n  yearsLabel: 'year(s)',\n  ofLabel: 'of ',\n  everyLabel: 'Every',\n};\n\nconst CommandLayoutPlaceholder = () => <TemplatePlaceholder name=\"commandLayout\" />;\nconst BasicLayoutPlaceholder = () => <TemplatePlaceholder name=\"basicLayout\" />;\nconst RecurrenceLayoutPlaceholder = () => <TemplatePlaceholder name=\"recurrenceLayout\" />;\n\nconst pluginDependencies = [\n  { name: 'EditingState', optional: true },\n  { name: 'Appointments', optional: true },\n  { name: 'AppointmentTooltip', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst prepareChanges = (\n  appointmentData, editingAppointment,\n  addedAppointment, appointmentChanges,\n  resources, plainResources,\n) => {\n  const isNew = !editingAppointment;\n  const changedAppointment = {\n    ...appointmentData,\n    ...appointmentChanges,\n    ...isNew && addedAppointment,\n  };\n  const appointmentResources = getAppointmentResources(\n    changedAppointment, resources, plainResources,\n  );\n  const isFormEdited = isNew || Object.getOwnPropertyNames(appointmentChanges).length !== 0;\n  return { changedAppointment, appointmentResources, isNew, isFormEdited };\n};\n\nconst isFormFullSize = (\n  isFormVisisble, changedAppointmentRRule, previousAppointmentRRule,\n) => !!changedAppointmentRRule || (!isFormVisisble && !!previousAppointmentRRule);\n\nclass AppointmentFormBase extends React.PureComponent<AppointmentFormProps, AppointmentFormState> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentData: (payload: any) => void;\n  openFormHandler: (payload: AppointmentModel) => void;\n  container = React.createRef();\n\n  static defaultProps: Partial<AppointmentFormProps> = {\n    messages: {},\n    readOnly: false,\n    onVisibilityChange: () => undefined,\n    onAppointmentDataChange: () => undefined,\n  };\n  static components: PluginComponents = {\n    overlayComponent: 'Overlay',\n    layoutComponent: 'Layout',\n    commandLayoutComponent: 'CommandLayout',\n    commandButtonComponent: 'CommandButton',\n    basicLayoutComponent: 'BasicLayout',\n    textEditorComponent: 'TextEditor',\n    labelComponent: 'Label',\n    dateEditorComponent: 'DateEditor',\n    booleanEditorComponent: 'BooleanEditor',\n    selectComponent: 'Select',\n    recurrenceLayoutComponent: 'RecurrenceLayout',\n    radioGroupComponent: 'RadioGroup',\n    weeklyRecurrenceSelectorComponent: 'WeeklyRecurrenceSelector',\n    resourceEditorComponent: 'ResourceEditor',\n    containerComponent: 'Container',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentData: props.appointmentData || {},\n      previousAppointment: props.appointmentData || {},\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentData: () => {\n          const { onAppointmentDataChange } = this.props;\n          return onAppointmentDataChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentData = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentData', setAppointmentData);\n\n    this.openFormHandler = (appointmentData) => {\n      this.setAppointmentData({ appointmentData });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentData = prevState.appointmentData,\n    } = nextProps;\n    return {\n      appointmentData,\n      visible,\n    };\n  }\n\n  commitChanges = memoize((\n    finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment,\n  ) => () =>  {\n    this.toggleVisibility();\n    if (isNew) {\n      callActionIfExists(commitAddedAppointment, changedAppointment);\n    } else if (finishCommitAppointment) {\n      finishCommitAppointment();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  cancelChanges = memoize((\n    openCancelConfirmationDialog, isNew, stopEditAppointment, appointmentChanges,\n    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n  ) => () => {\n    if (openCancelConfirmationDialog && Object.keys(appointmentChanges).length !== 0) {\n      openCancelConfirmationDialog(TOGGLE_APPOINTMENT_FORM_VISIBILITY);\n    } else {\n      if (isNew) {\n        callActionIfExists(cancelAddedAppointment, appointmentChanges);\n      } else {\n        callActionIfExists(stopEditAppointment, appointmentChanges);\n        callActionIfExists(cancelChangedAppointment, appointmentChanges);\n      }\n      this.toggleVisibility();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  deleteAppointment = memoize((\n    finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog,\n    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n    stopEditAppointment, isNew,\n  ) => () => {\n    if (openDeleteConfirmationDialog) {\n      openDeleteConfirmationDialog({\n        hideActionName: TOGGLE_APPOINTMENT_FORM_VISIBILITY, appointmentData: changedAppointment,\n      });\n    } else {\n      callActionIfExists(finishDeleteAppointment, appointmentData);\n      if (isNew) {\n        callActionIfExists(cancelAddedAppointment, appointmentData);\n      } else {\n        callActionIfExists(cancelChangedAppointment, appointmentData);\n        callActionIfExists(stopEditAppointment, appointmentData);\n      }\n      this.toggleVisibility();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  changeAppointmentField = memoize((isNew, changeAddedAppointment, changeAppointment) =>\n    (change) => {\n      if (change && change.rRule) {\n        this.setState({ previousAppointment: {\n          ...this.state.previousAppointment, rRule: change.rRule,\n        }});\n      }\n      if (isNew) {\n        callActionIfExists(changeAddedAppointment, { change });\n      } else {\n        callActionIfExists(changeAppointment, { change });\n      }\n    },\n  );\n\n  getMessage = memoize((menuMessages, messages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const {\n      containerComponent: Container,\n      overlayComponent: Overlay,\n      layoutComponent: Layout,\n      commandLayoutComponent: CommandLayout,\n      basicLayoutComponent: BasicLayout,\n      recurrenceLayoutComponent: RecurrenceLayout,\n      commandButtonComponent,\n      textEditorComponent,\n      labelComponent,\n      dateEditorComponent,\n      booleanEditorComponent,\n      selectComponent,\n      radioGroupComponent,\n      weeklyRecurrenceSelectorComponent,\n      resourceEditorComponent,\n      readOnly,\n      messages,\n    } = this.props;\n    const { visible, appointmentData, previousAppointment } = this.state;\n    const getMessage = this.getMessage(defaultMessages, messages);\n    return (\n      <Plugin\n        name=\"AppointmentForm\"\n        dependencies={pluginDependencies}\n      >\n        <Action name={TOGGLE_APPOINTMENT_FORM_VISIBILITY} action={this.toggleVisibility} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n\n              resources,\n              plainResources,\n            }, {\n              openCancelConfirmationDialog,\n\n              stopEditAppointment,\n              cancelAddedAppointment,\n              cancelChangedAppointment,\n            }) => {\n              const { changedAppointment, isNew } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              const fullSize = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              const onHideAction = () => visible && this.cancelChanges(\n                openCancelConfirmationDialog, isNew, stopEditAppointment,\n                { ...appointmentChanges, ...addedAppointment }, changedAppointment,\n                cancelAddedAppointment, cancelChangedAppointment,\n              )();\n\n              return (\n                <React.Fragment>\n                  <Container ref={this.container} />\n                  <Overlay\n                    visible={visible}\n                    onHide={onHideAction}\n                    fullSize={fullSize}\n                    target={this.container}\n                  >\n                    <Layout\n                      basicLayoutComponent={BasicLayoutPlaceholder}\n                      commandLayoutComponent={CommandLayoutPlaceholder}\n                      recurrenceLayoutComponent={RecurrenceLayoutPlaceholder}\n                      isRecurrence={fullSize}\n                    />\n                  </Overlay>\n                  <TemplatePlaceholder />\n                </React.Fragment>);\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"commandLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n\n              resources,\n              plainResources,\n            }, {\n              commitAddedAppointment,\n              finishCommitAppointment,\n              finishDeleteAppointment,\n\n              stopEditAppointment,\n              cancelAddedAppointment,\n              cancelChangedAppointment,\n\n              openCancelConfirmationDialog,\n              openDeleteConfirmationDialog,\n            }) => {\n              const { isNew, changedAppointment, isFormEdited } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              const isRecurrence = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              return (\n                <CommandLayout\n                  commandButtonComponent={commandButtonComponent}\n                  onCommitButtonClick={this.commitChanges(\n                    finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment,\n                  )}\n                  onCancelButtonClick={this.cancelChanges(\n                    openCancelConfirmationDialog, isNew, stopEditAppointment,\n                    { ...appointmentChanges, ...addedAppointment }, changedAppointment,\n                    cancelAddedAppointment, cancelChangedAppointment,\n                  )}\n                  onDeleteButtonClick={this.deleteAppointment(\n                    finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog,\n                    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n                    stopEditAppointment, isNew,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  fullSize={isRecurrence}\n                  disableSaveButton={!isFormEdited}\n                  hideDeleteButton={isNew}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"basicLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n              locale,\n\n              resources,\n              plainResources,\n            }, {\n              changeAppointment,\n              changeAddedAppointment,\n            }) => {\n              const { isNew, changedAppointment, appointmentResources } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              return (\n                <BasicLayout\n                  locale={locale}\n                  appointmentData={visible ? changedAppointment : previousAppointment}\n                  onFieldChange={this.changeAppointmentField(\n                    isNew, changeAddedAppointment, changeAppointment,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  textEditorComponent={textEditorComponent}\n                  dateEditorComponent={dateEditorComponent}\n                  booleanEditorComponent={booleanEditorComponent}\n                  selectComponent={selectComponent}\n                  labelComponent={labelComponent}\n                  resourceEditorComponent={resourceEditorComponent}\n                  fullSize={!changedAppointment.rRule}\n                  resources={resources}\n                  appointmentResources={appointmentResources as Array<ValidResourceInstance>}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"recurrenceLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n              formatDate,\n              locale,\n              firstDayOfWeek,\n            }, {\n              changeAddedAppointment,\n              changeAppointment,\n            }) => {\n              const { isNew, changedAppointment } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                undefined, undefined,\n              );\n              const isRecurrenceLayoutVisible = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              const correctedAppointment = !changedAppointment.rRule\n                ? { ...changedAppointment, rRule: previousAppointment.rRule } : changedAppointment;\n\n              return (\n                <RecurrenceLayout\n                  locale={locale}\n                  appointmentData={visible ? correctedAppointment : previousAppointment}\n                  onFieldChange={this.changeAppointmentField(\n                    isNew, changeAddedAppointment, changeAppointment,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  formatDate={formatDate}\n                  textEditorComponent={textEditorComponent}\n                  dateEditorComponent={dateEditorComponent}\n                  radioGroupComponent={radioGroupComponent}\n                  weeklyRecurrenceSelectorComponent={weeklyRecurrenceSelectorComponent}\n                  labelComponent={labelComponent}\n                  selectComponent={selectComponent}\n                  visible={isRecurrenceLayoutVisible}\n                  firstDayOfWeek={firstDayOfWeek}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: AppointmentTooltip.LayoutProps) => (\n            <TemplateConnector>\n              {(getters, { startEditAppointment }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onOpenButtonClick: () => {\n                      this.openFormHandler(params.appointmentMeta!.data);\n                      callActionIfExists(startEditAppointment, params.appointmentMeta!.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplateConnector>\n              {(getters, { startEditAppointment }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onDoubleClick: () => {\n                      this.openFormHandler(params.data);\n                      callActionIfExists(startEditAppointment, params.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"cell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {(getters, { addAppointment }) => addDoubleClickToCell(\n                undefined, params.startDate, params.endDate,\n                isAllDayCell(params.startDate, params.endDate),\n                this.openFormHandler, addAppointment, params,\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {(getters, { addAppointment }) => addDoubleClickToCell(\n                undefined, params.startDate, params.endDate,\n                true, this.openFormHandler, addAppointment, params,\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/** The AppointmentForm plugin renders a form that visualizes appointmentâ€™s data and allows a user to modify this data. */\nexport const AppointmentForm: React.ComponentType<AppointmentFormProps> = AppointmentFormBase;\n","import * as React from 'react';\nimport moment from 'moment';\nimport {\n  Plugin, Template, TemplatePlaceholder,\n  TemplateConnector, DropTarget, DragSource,\n  DragDropProvider as DragDropProviderCore,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  cellIndex,\n  cellData,\n  cellType,\n  getAppointmentStyle,\n  intervalDuration,\n  autoScroll,\n  calculateAppointmentTimeBoundaries,\n  calculateInsidePart,\n  calculateDraftAppointments,\n  RESIZE_TOP,\n  RESIZE_BOTTOM,\n  POSITION_START,\n  POSITION_END,\n  getAppointmentResources,\n} from '@devexpress/dx-scheduler-core';\nimport { DragDropProviderProps, DragDropProviderState } from '../types';\n\nconst renderAppointmentItems = (items, Wrapper, draftData) => (\n  items.length > 0 ? (\n    <Wrapper>\n      {items.map((draftAppointment, index) => (\n        <TemplatePlaceholder\n          name=\"draftAppointment\"\n          key={index.toString()}\n          params={{ data: draftData, draftAppointment }}\n        />\n      ))}\n    </Wrapper>\n  ) : (\n    null\n  )\n);\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Appointments' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'AllDayPanel', optional: true },\n];\n\nclass DragDropProviderBase extends React.PureComponent<\n  DragDropProviderProps, DragDropProviderState\n> {\n  timeTableDraftAppointments: any = [];\n  allDayDraftAppointments: any = [];\n  offsetTimeTop: number | null = null;\n  appointmentStartTime: any = null;\n  appointmentEndTime: any = null;\n\n  state: DragDropProviderState = {\n    startTime: null,\n    endTime: null,\n    payload: null,\n    isOutside: false,\n  };\n  static components: PluginComponents = {\n    containerComponent: 'Container',\n    draftAppointmentComponent: 'DraftAppointment',\n    sourceAppointmentComponent: 'SourceAppointment',\n    resizeComponent: 'Resize',\n  };\n  static defaultProps: Partial<DragDropProviderProps> = {\n    allowDrag: () => true,\n    allowResize: () => true,\n  };\n\n  onPayloadChange(actions) {\n    return args => this.handlePayloadChange(args, actions);\n  }\n\n  calculateNextBoundaries(getters, actions) {\n    return args => this.calculateBoundaries(args, getters, actions);\n  }\n\n  resetCache() {\n    this.timeTableDraftAppointments = [];\n    this.allDayDraftAppointments = [];\n    this.offsetTimeTop = null;\n    this.appointmentStartTime = null;\n    this.appointmentEndTime = null;\n\n    this.setState({\n      payload: null,\n      startTime: null,\n      endTime: null,\n      isOutside: false,\n    });\n  }\n\n  applyChanges(startTime, endTime, payload, startEditAppointment, changeAppointment) {\n    startEditAppointment(payload);\n    changeAppointment({\n      change: {\n        startDate: startTime,\n        endDate: endTime,\n        ...payload.allDay && { allDay: undefined },\n      },\n    });\n    this.setState({ startTime, endTime, payload, isOutside: false });\n  }\n\n  handlePayloadChange({ payload }, { finishCommitAppointment }) {\n    const { isOutside } = this.state;\n    if (payload || !isOutside) return;\n\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  calculateBoundaries(\n    { payload, clientOffset },\n    {\n      viewCellsData, startViewDate, endViewDate, excludedDays,\n      timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n    },\n    { changeAppointment, startEditAppointment },\n  ) {\n    if (clientOffset) {\n      autoScroll(clientOffset, scrollingStrategy);\n    }\n\n    const tableCellElementsMeta = timeTableElementsMeta;\n\n    // AllDayPanel doesn't always exist\n    const allDayCellsElementsMeta = allDayElementsMeta && allDayElementsMeta.getCellRects\n      ? allDayElementsMeta\n      : { getCellRects: [] };\n    const timeTableIndex = cellIndex(tableCellElementsMeta.getCellRects, clientOffset);\n    const allDayIndex = cellIndex(allDayCellsElementsMeta.getCellRects, clientOffset);\n\n    if (allDayIndex === -1 && timeTableIndex === -1) return;\n\n    const targetData = cellData(timeTableIndex, allDayIndex, viewCellsData);\n    const targetType = cellType(targetData);\n    const insidePart = calculateInsidePart(\n      clientOffset.y, tableCellElementsMeta.getCellRects, timeTableIndex,\n    );\n    const cellDurationMinutes = intervalDuration(targetData, 'minutes');\n\n    const {\n      appointmentStartTime, appointmentEndTime, offsetTimeTop,\n    } = calculateAppointmentTimeBoundaries(\n      payload, targetData, targetType, cellDurationMinutes,\n      insidePart, this.offsetTimeTop!,\n    );\n\n    this.appointmentStartTime = appointmentStartTime || this.appointmentStartTime;\n    this.appointmentEndTime = appointmentEndTime || this.appointmentEndTime;\n    this.offsetTimeTop = offsetTimeTop!;\n\n    const { startTime, endTime } = this.state;\n    if (moment(startTime!).isSame(this.appointmentStartTime)\n      && moment(endTime!).isSame(this.appointmentEndTime)) return;\n\n    const draftAppointments = [{\n      dataItem: {\n        ...payload,\n        startDate: this.appointmentStartTime,\n        endDate: this.appointmentEndTime,\n      },\n      start: this.appointmentStartTime,\n      end: this.appointmentEndTime,\n    }];\n\n    const {\n      allDayDraftAppointments,\n      timeTableDraftAppointments,\n    } = calculateDraftAppointments(\n      allDayIndex, draftAppointments, startViewDate,\n      endViewDate, excludedDays, viewCellsData, allDayCellsElementsMeta,\n      targetType, cellDurationMinutes, tableCellElementsMeta,\n    );\n    this.allDayDraftAppointments = allDayDraftAppointments;\n    this.timeTableDraftAppointments = timeTableDraftAppointments;\n\n    this.applyChanges(\n      this.appointmentStartTime, this.appointmentEndTime,\n      payload, startEditAppointment, changeAppointment,\n    );\n  }\n\n  handleDrop = ({ finishCommitAppointment }) => () => {\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  handleLeave = () => {\n    this.setState({ isOutside: true });\n  }\n\n  render() {\n    const { payload } = this.state;\n    const {\n      containerComponent: Container,\n      draftAppointmentComponent: DraftAppointment,\n      sourceAppointmentComponent: SourceAppointment,\n      resizeComponent: Resize,\n      allowDrag,\n      allowResize,\n    } = this.props;\n\n    const draftData = {\n      ...payload, startDate: this.appointmentStartTime, endDate: this.appointmentEndTime,\n    };\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({\n              viewCellsData, startViewDate, endViewDate, excludedDays,\n              timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n            }, {\n              changeAppointment, startEditAppointment, finishCommitAppointment,\n            }) => {\n              const calculateBoundariesByMove = this.calculateNextBoundaries({\n                viewCellsData,\n                startViewDate,\n                endViewDate,\n                excludedDays,\n                timeTableElementsMeta,\n                allDayElementsMeta,\n                scrollingStrategy,\n              }, { changeAppointment, startEditAppointment });\n              return (\n                <DragDropProviderCore\n                  onChange={this.onPayloadChange({ finishCommitAppointment })}\n                >\n                  <DropTarget\n                    onOver={calculateBoundariesByMove}\n                    onEnter={calculateBoundariesByMove}\n                    onDrop={this.handleDrop({ finishCommitAppointment })}\n                    onLeave={this.handleLeave}\n                  >\n                    <TemplatePlaceholder />\n                  </DropTarget>\n                </DragDropProviderCore>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template\n          name=\"appointmentContent\"\n          predicate={({ data }: any) => allowDrag!(data)}\n        >\n          {({ styles, ...params }: any) => (\n            <DragSource\n              payload={{ ...params.data, type: params.type }}\n            >\n              {payload && params.data.id === payload.id ? (\n                <SourceAppointment {...params} />\n              ) : (\n                <TemplatePlaceholder params={{ ...params, draggable: true }} />\n              )}\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentTop\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_TOP, appointmentType: type }}\n            >\n              <Resize position={POSITION_START} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentBottom\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_BOTTOM, appointmentType: type }}\n            >\n              <Resize position={POSITION_END} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplatePlaceholder />\n          {renderAppointmentItems(this.allDayDraftAppointments, Container, draftData)}\n        </Template>\n\n        <Template name=\"timeTable\">\n          <TemplatePlaceholder />\n          {renderAppointmentItems(this.timeTableDraftAppointments, Container, draftData)}\n        </Template>\n\n        <Template name=\"draftAppointment\">\n          {({ data, draftAppointment, ...restParams }: any) => (\n            <TemplateConnector>\n              {({ formatDate, resources, plainResources }) => {\n                const {\n                  dataItem, type, fromPrev, toNext, durationType, ...geometry\n                } = draftAppointment;\n                return (\n                  <DraftAppointment\n                    data={data}\n                    resources={getAppointmentResources(data, resources, plainResources)}\n                    durationType={durationType}\n                    style={getAppointmentStyle(geometry)}\n                    type={type}\n                    fromPrev={fromPrev}\n                    toNext={toNext}\n                    formatDate={formatDate}\n                    {...restParams}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that enables users to edit appointments via drag-and-drop. */\nexport const DragDropProvider: React.ComponentType<DragDropProviderProps> = DragDropProviderBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { TodayButtonProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst defaultMessages = {\n  today: 'Today',\n};\n\nclass TodayButtonBase extends React.PureComponent<TodayButtonProps> {\n  static components: PluginComponents = {\n    buttonComponent: 'Button',\n  };\n  render() {\n    const {\n      buttonComponent: Button,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    return (\n      <Plugin\n        name=\"TodayButton\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {(getters, {\n              changeCurrentDate,\n            }) => {\n              const setCurrentDate = nextDate => changeCurrentDate({\n                nextDate,\n              });\n              return (\n                <Button\n                  getMessage={getMessage}\n                  setCurrentDate={setCurrentDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's button which sets the current date to today's date. */\nexport const TodayButton: React.ComponentType<TodayButtonProps> = TodayButtonBase;\n","import * as React from 'react';\nimport { memoize, getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, Action, Getters, Actions,\n} from '@devexpress/dx-react-core';\nimport { RECURRENCE_EDIT_SCOPE } from '@devexpress/dx-scheduler-core';\nimport { EditRecurrenceMenuProps, EditRecurrenceMenuState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nconst defaultAvailableOperations = [\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT },\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING },\n  { value: RECURRENCE_EDIT_SCOPE.ALL },\n];\n\nconst defaultMessages = {\n  [RECURRENCE_EDIT_SCOPE.CURRENT]: 'This appointment',\n  [RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING]: 'This and following appointments',\n  [RECURRENCE_EDIT_SCOPE.ALL]: 'All appointments',\n  menuEditTitle: 'Edit recurring appointment',\n  menuDeleteTitle: 'Delete recurring appointment',\n  cancelButton: 'Cancel',\n  commitButton: 'OK',\n};\n\nclass EditRecurrenceMenuBase extends React.PureComponent<\n  EditRecurrenceMenuProps, EditRecurrenceMenuState\n> {\n  static components = {\n    layoutComponent: 'Layout',\n    overlayComponent: 'Overlay',\n    buttonComponent: 'Button',\n    containerComponent: 'Container',\n  };\n\n  modalContainer = React.createRef();\n\n  state = {\n    isOpen: false,\n    deletedAppointmentData: null,\n  };\n\n  finishCommitAppointment = (\n    payload,\n    { editingAppointment }: Getters,\n    { commitChangedAppointment }: Actions,\n  ) => {\n    if (editingAppointment && !editingAppointment.rRule) {\n      commitChangedAppointment();\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: null,\n      });\n    }\n  }\n\n  finishDeleteAppointment = (\n    payload,\n    getters,\n    { commitDeletedAppointment }: Actions,\n  ) => {\n    if (payload && !payload.rRule) {\n      commitDeletedAppointment({ deletedAppointmentData: payload });\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: payload,\n      });\n    }\n  }\n\n  commit = memoize((editAction, deleteAction, payload) => (type) => {\n    if (payload) {\n      deleteAction({ deletedAppointmentData: payload, type });\n    } else {\n      editAction(type);\n    }\n    this.closeMenu();\n  });\n\n  closeMenu = () => {\n    this.setState({ isOpen: false, deletedAppointmentData: null });\n  }\n\n  cancelEditing = memoize((cancelAction, stopEditAction) => () => {\n    stopEditAction();\n    cancelAction();\n    this.closeMenu();\n  });\n\n  availableOperations = memoize((getMessage, menuAvailableOperations) =>\n    menuAvailableOperations.map(({ value }) => ({\n      value,\n      title: getMessage([value]),\n    })));\n\n  getMessage = memoize((messages, menuMessages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const { isOpen, deletedAppointmentData } = this.state;\n    const {\n      layoutComponent: Layout,\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      buttonComponent,\n      messages,\n    } = this.props;\n\n    const getMessage = this.getMessage(messages, defaultMessages);\n    const availableOperations = this.availableOperations(getMessage, defaultAvailableOperations);\n\n    return (\n      <Plugin\n        name=\"EditRecurrenceMenu\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplatePlaceholder />\n          <Container ref={this.modalContainer} />\n          <TemplatePlaceholder name=\"overlay\" />\n        </Template>\n\n        <Template name=\"overlay\">\n          <TemplateConnector>\n            {(getters, {\n              commitChangedAppointment, commitDeletedAppointment,\n              cancelChangedAppointment, stopEditAppointment,\n            }) => {\n              const commit = this.commit(\n                commitChangedAppointment, commitDeletedAppointment, deletedAppointmentData,\n              );\n              const cancelEditing = this.cancelEditing(\n                cancelChangedAppointment, stopEditAppointment,\n              );\n\n              return (\n                <Overlay\n                  target={this.modalContainer}\n                  visible={isOpen}\n                  onHide={this.closeMenu}\n                >\n                  <Layout\n                    isDeleting={!!deletedAppointmentData}\n                    buttonComponent={buttonComponent}\n                    handleClose={cancelEditing}\n                    commit={commit}\n                    availableOperations={availableOperations}\n                    getMessage={getMessage}\n                  />\n                </Overlay>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/**\n * A plugin that renders the Scheduler's edit menu.\n * Should not be used with the `IntegratedEditing` plugin.\n */\nexport const EditRecurrenceMenu: React.ComponentType<\n  EditRecurrenceMenuProps\n> = EditRecurrenceMenuBase;\n","import * as React from 'react';\nimport { Action, Plugin, Actions } from '@devexpress/dx-react-core';\nimport { IntegratedEditingProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nclass IntegratedEditingBase extends React.PureComponent<IntegratedEditingProps> {\n  static defaultProps = {\n    totalCount: 0,\n  };\n\n  finishCommitAppointment = (payload, getters, { commitChangedAppointment }: Actions) => {\n    commitChangedAppointment();\n  }\n\n  finishDeleteAppointment = (payload, getters, { commitDeletedAppointment }: Actions) => {\n    commitDeletedAppointment({ deletedAppointmentData: payload });\n  }\n\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedEditing\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that allows implementing a editing calculation logic. */\nexport const IntegratedEditing: React.ComponentType<IntegratedEditingProps> = IntegratedEditingBase;\n","import * as React from 'react';\nimport { Plugin, Getter, Template, TemplatePlaceholder, TemplateConnector, Getters } from '@devexpress/dx-react-core';\nimport { convertResourcesToPlain, validateResources, getAppointmentResources } from '@devexpress/dx-scheduler-core';\nimport { ResourcesProps } from '../types/resources/resources.types';\nimport { Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n];\n\nconst ResourcesBase: React.SFC<ResourcesProps> = ({\n  data, mainResourceName, palette,\n}) => {\n  const convertResources = ({ resources }: Getters) =>\n    convertResourcesToPlain(resources);\n\n  return (\n  <Plugin\n    name=\"Resources\"\n    dependencies={pluginDependencies}\n  >\n    <Getter name=\"resources\" value={validateResources(data, mainResourceName, palette)} />\n    <Getter name=\"plainResources\" computed={convertResources} />\n\n    <Template name=\"appointment\">\n      {(params: Appointments.AppointmentProps) => (\n        <TemplateConnector>\n          {({ resources, plainResources }) => {\n            return (\n              <TemplatePlaceholder\n                params={{\n                  ...params,\n                  resources: getAppointmentResources(params.data as any, resources, plainResources),\n                }}\n              />\n            );\n          }}\n        </TemplateConnector>\n      )}\n    </Template>\n  </Plugin>\n  );\n};\n\n/** A plugin that manages schedule's resources. */\nexport const Resources: React.ComponentType<ResourcesProps> = ResourcesBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  Action,\n} from '@devexpress/dx-react-core';\nimport { ConfirmationDialogProps } from '../types/editing/confirmation-dialog.types';\nimport { AppointmentModel } from '@devexpress/dx-scheduler-core';\n\nconst defaultMessages = {\n  discardButton: 'Discard',\n  deleteButton: 'Delete',\n  cancelButton: 'Cancel',\n  confirmDeleteMessage: 'Are you sure you want to delete this appointment?',\n  confirmCancelMessage: 'Discard unsaved changes?',\n};\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst ACTION_TYPES = {\n  CANCEL: 'cancel',\n  DELETE: 'delete',\n};\n\nconst ConfirmationDialogBase: React.SFC<ConfirmationDialogProps> & {components: {\n  overlayComponent: string, containerComponent: string,\n  layoutComponent: string, buttonComponent: string,\n}} = ({\n  messages, overlayComponent: Overlay, layoutComponent: Layout, containerComponent: Container,\n  buttonComponent, ignoreDelete, ignoreCancel,\n}) => {\n  const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n  const modalContainer = React.useRef();\n\n  const [visible, setVisible] = React.useState(false);\n  const [actionType, setActionType] = React.useState('');\n  const [hideActionName, setHideActionName] = React.useState('');\n  const [appointmentData, setAppointmentData] = React.useState({});\n\n  const toggleVisibility = React.useCallback(() => {\n    setVisible(!visible);\n  }, [visible, setVisible]);\n\n  const confirmCancelChanges = React.useCallback((hideAction) => {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.CANCEL);\n  }, [toggleVisibility, setHideActionName, setActionType]);\n\n  const confirmDelete = React.useCallback(({\n    hideActionName: hideAction, appointmentData: changedAppointment,\n  }) => {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.DELETE);\n    setAppointmentData(changedAppointment);\n  }, [toggleVisibility, setHideActionName, setActionType, setAppointmentData]);\n\n  const confirmAction = React.useCallback((\n    isNewAppointment, hideEditor, stopEditAppointment, finishDeleteAppointment,\n    cancelAddedAppointment, cancelChangedAppointment,\n  ) => () => {\n    hideEditor();\n    toggleVisibility();\n    if (isNewAppointment) {\n      cancelAddedAppointment();\n    } else {\n      stopEditAppointment();\n      cancelChangedAppointment();\n    }\n    if (actionType === ACTION_TYPES.DELETE) {\n      finishDeleteAppointment(appointmentData);\n    }\n  }, [toggleVisibility, actionType, appointmentData]);\n\n  return (\n    <Plugin\n      name=\"ConfirmationDialog\"\n      dependencies={pluginDependencies}\n    >\n      {!ignoreCancel &&\n        <Action name=\"openCancelConfirmationDialog\" action={confirmCancelChanges} />\n      }\n      {!ignoreDelete &&\n        <Action name=\"openDeleteConfirmationDialog\" action={confirmDelete} />\n      }\n\n      <Template name=\"schedulerRoot\">\n        <TemplatePlaceholder />\n        <Container ref={modalContainer} />\n        <TemplatePlaceholder name=\"confirmationDialogOverlay\" />\n      </Template>\n\n      <Template name=\"confirmationDialogOverlay\">\n        <TemplateConnector>\n          {({\n            editingAppointment,\n          }, actions) => {\n            const handleConfirm = confirmAction(\n              !editingAppointment, actions[hideActionName], actions.stopEditAppointment,\n              actions.finishDeleteAppointment, actions.cancelAddedAppointment,\n              actions.cancelChangedAppointment,\n            );\n\n            return (\n              <Overlay\n                target={modalContainer}\n                visible={visible}\n                onHide={toggleVisibility}\n              >\n                <Layout\n                  buttonComponent={buttonComponent}\n                  handleCancel={toggleVisibility}\n                  handleConfirm={handleConfirm}\n                  getMessage={getMessage}\n                  isDeleting={actionType === ACTION_TYPES.DELETE}\n                  appointmentData={appointmentData as AppointmentModel}\n                />\n              </Overlay>\n            );\n          }}\n        </TemplateConnector>\n      </Template>\n    </Plugin>\n  );\n};\n\nConfirmationDialogBase.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  buttonComponent: 'Button',\n};\n\nConfirmationDialogBase.defaultProps = {\n  ignoreCancel: false,\n  ignoreDelete: false,\n};\n\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the dialog which allows users to confirm or to discard delete and cancel appointment actions. */\nexport const ConfirmationDialog: React.ComponentType<\n  ConfirmationDialogProps\n> = ConfirmationDialogBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  isMonthCell, isShadedAppointment,\n  isCellShaded, getCurrentTimeIndicatorTop,\n} from '@devexpress/dx-scheduler-core';\nimport { CurrentTimeIndicatorProps, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'DragDropProvider', optional: true },\n  { name: 'Appointments', optional: true },\n];\n\nconst CurrentTimeIndicatorBase: React.SFC<CurrentTimeIndicatorProps>  & {components: {\n  indicatorComponent: string,\n}} = ({\n  indicatorComponent, shadePreviousAppointments, shadePreviousCells, updateInterval,\n}) => {\n  const [currentTime, setCurrentTime] = React.useState(Date.now);\n  const [indicatorUpdateTimer, setIndicatorUpdateTimer] = React.useState<any>(undefined);\n\n  React.useEffect(() => {\n    clearInterval(indicatorUpdateTimer);\n    setIndicatorUpdateTimer(setInterval(() => {\n      setCurrentTime(Date.now());\n    }, updateInterval));\n    return () => clearInterval(indicatorUpdateTimer);\n  }, [updateInterval]);\n\n  return (\n    <Plugin\n      name=\"CurrentTimeIndicator\"\n      dependencies={pluginDependencies}\n    >\n      <Template\n        name=\"cell\"\n        predicate={({ otherMonth }: any) => !isMonthCell(otherMonth)}\n      >\n        {(params: any) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              currentTimeIndicatorPosition: getCurrentTimeIndicatorTop(params, currentTime),\n              currentTimeIndicatorComponent: indicatorComponent,\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"cell\"\n      >\n        {(params: any) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isCellShaded(params, currentTime, shadePreviousCells),\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"appointmentContent\"\n      >\n        {(params: Appointments.AppointmentProps) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isShadedAppointment(\n                params, currentTime, shadePreviousAppointments,\n              ),\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"draftAppointment\"\n      >\n        {(params: Appointments.AppointmentProps) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isShadedAppointment(\n                params, currentTime, shadePreviousAppointments,\n              ),\n            }}\n          />\n        )}\n      </Template>\n    </Plugin>\n  );\n};\n\nCurrentTimeIndicatorBase.defaultProps = {\n  updateInterval: 60000,\n  shadePreviousCells: false,\n  shadePreviousAppointments: false,\n};\n\nCurrentTimeIndicatorBase.components = {\n  indicatorComponent: 'Indicator',\n};\n\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the current time indicator and the shading that covers appointments and timetable cells up to the current time. */\nexport const CurrentTimeIndicator: React.ComponentType<\n  CurrentTimeIndicatorProps\n> = CurrentTimeIndicatorBase;\n"],"names":["memoize","formatDateTimeGetter","React.createElement","Plugin","Getter","appointments","Template","TemplatePlaceholder","React.PureComponent","PluginHost","startViewDateCore","endViewDateCore","computed","availableViewsCore","TemplateConnector","getAppointmentStyle","viewCellsDataCore","verticalTimeTableRects","TYPE","viewCellsDataBaseComputed","DayScaleEmptyCellPlaceholder","TimeScalePlaceholder","horizontalTimeTableRects","monthCellsData","viewBoundText","pluginDependencies","createClickHandlers","POSITION_START","POSITION_END","AppointmentPlaceholder","CellPlaceholder","allDayCells","allDayRects","getMessagesFormatter","createStateHelper","changeCurrentDate","setCurrentViewName","Action","startEditAppointment","stopEditAppointment","changeAppointment","cancelChanges","RECURRENCE_EDIT_SCOPE","changedAppointmentById","addAppointment","cancelAddedAppointment","preCommitChangesBase","OPEN_COMMAND_BUTTON","CLOSE_COMMAND_BUTTON","DELETE_COMMAND_BUTTON","setAppointmentMeta","TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY","getAppointmentResources","callActionIfExists","defaultMessages","React.createRef","TOGGLE_APPOINTMENT_FORM_VISIBILITY","setAppointmentData","React.Fragment","isAllDayCell","autoScroll","cellIndex","cellData","cellType","calculateInsidePart","intervalDuration","DragDropProviderCore","DropTarget","DragSource","RESIZE_TOP","RESIZE_BOTTOM","convertResourcesToPlain","validateResources","React.useRef","React.useCallback","React.useEffect","isMonthCell","getCurrentTimeIndicatorTop","isCellShaded","isShadedAppointment"],"mappings":"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"}